buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'http://dl.bintray.com/kotlin/kotlin-eap'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$VER_KOTLIN"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$VER_KOTLIN"
        classpath "hu.supercluster:paperwork-plugin:$VER_PAPERWORK"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'

android {
    compileSdkVersion VER_SDK_COMPILE.toInteger()
    buildToolsVersion VER_BUILD_TOOLS

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        applicationId PKG
        minSdkVersion VER_SDK_MIN.toInteger()
        targetSdkVersion VER_SDK_TARGET.toInteger()
        versionCode VER_CODE.toInteger()
        versionName VER_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file('keystore/open.keystore.jks')
            keyAlias 'openkey'
            storePassword 'openkey'
            keyPassword 'openkey'
        }
        release {
            // TODO SOMEDAY: different config for release
            storeFile file('keystore/open.keystore.jks')
            keyAlias 'openkey'
            storePassword 'openkey'
            keyPassword 'openkey'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //noinspection GroovyAssignabilityCheck
            signingConfig signingConfigs.release
            buildConfigField "String", "NAME_PREFIX", '""'
        }
        debug {
            def suff = ".debug"
            applicationIdSuffix suff
            buildConfigField "String", "NAME_PREFIX", '"D "'
        }
        canary {
            initWith(buildTypes.debug)
            def suff = ".canary"
            applicationIdSuffix suff
            buildConfigField "String", "NAME_PREFIX", '"C "'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        warning 'InvalidPackage'
    }
    resourcePrefix 'mh_'

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

repositories {
    mavenCentral()
    maven {
        url 'http://dl.bintray.com/kotlin/kotlin-eap'
    }
}

kapt {
    generateStubs = true
}

dependencies {

    compile 'com.github.langara.MyIntent:myactivities:myintent-SNAPSHOT'
    // or from local maven repository:
//    compile 'com.github.langara:myactivities:unspecified'

    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile "junit:junit:$VER_JUNIT"
    testCompile "com.google.truth:truth:$VER_GTRUTH"
    androidTestCompile "junit:junit:$VER_JUNIT"
    androidTestCompile "com.google.truth:truth:$VER_GTRUTH"
    androidTestCompile "com.android.support:support-annotations:$VER_ASUPPORT"
    androidTestCompile "com.android.support.test:runner:$VER_ASUPPORT_TEST"
    androidTestCompile "com.android.support.test:rules:$VER_ASUPPORT_TEST"
    compile "com.android.support:appcompat-v7:$VER_ASUPPORT"
    compile "com.android.support:support-annotations:$VER_ASUPPORT"

    compile "io.reactivex:rxandroid:$VER_RXANDROID"
    compile "io.reactivex:rxjava:$VER_RXJAVA"

    canaryCompile "com.squareup.leakcanary:leakcanary-android:$VER_LCANARY"
    debugCompile "com.squareup.leakcanary:leakcanary-android-no-op:$VER_LCANARY"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$VER_LCANARY"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$VER_LCANARY"

    kapt "com.google.dagger:dagger-compiler:$VER_DAGGER"
    compile "com.google.dagger:dagger:$VER_DAGGER"

    provided 'javax.annotation:jsr250-api:1.0'

    compile("com.github.afollestad.material-dialogs:core:$VER_MDIALOGS") {
        transitive = true
    }
    compile("com.github.afollestad.material-dialogs:commons:$VER_MDIALOGS") {
        transitive = true
    }

    compile "org.jetbrains.kotlin:kotlin-stdlib:$VER_KOTLIN"
    compile "hu.supercluster:paperwork:$VER_PAPERWORK"
}

apply plugin: 'hu.supercluster.paperwork'
paperwork {
    set = [
            buildTime: buildTime("yyyy-MM-dd HH:mm:ss"),
            gitSha: gitSha(),
            gitTag: gitTag(),
            gitInfo: gitInfo()
    ]
}
